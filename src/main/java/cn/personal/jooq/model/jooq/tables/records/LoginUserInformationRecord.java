/*
 * This file is generated by jOOQ.
 */
package cn.personal.jooq.model.jooq.tables.records;


import cn.personal.jooq.model.jooq.tables.LoginUserInformation;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LoginUserInformationRecord extends
    UpdatableRecordImpl<LoginUserInformationRecord> implements
    Record4<Integer, Long, String, String> {

  private static final long serialVersionUID = -796641999;

  /**
   * Setter for <code>mydata.login_user_information.id</code>. 自增主键
   */
  public void setId(Integer value) {
    set(0, value);
  }

  /**
   * Getter for <code>mydata.login_user_information.id</code>. 自增主键
   */
  public Integer getId() {
    return (Integer) get(0);
  }

  /**
   * Setter for <code>mydata.login_user_information.user_id</code>. 独立标记
   */
  public void setUserId(Long value) {
    set(1, value);
  }

  /**
   * Getter for <code>mydata.login_user_information.user_id</code>. 独立标记
   */
  public Long getUserId() {
    return (Long) get(1);
  }

  /**
   * Setter for <code>mydata.login_user_information.account</code>. 用户名(登录名)
   */
  public void setAccount(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>mydata.login_user_information.account</code>. 用户名(登录名)
   */
  public String getAccount() {
    return (String) get(2);
  }

  /**
   * Setter for <code>mydata.login_user_information.password</code>. 密码
   */
  public void setPassword(String value) {
    set(3, value);
  }

  /**
   * Getter for <code>mydata.login_user_information.password</code>. 密码
   */
  public String getPassword() {
    return (String) get(3);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Record1<Integer> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Row4<Integer, Long, String, String> fieldsRow() {
    return (Row4) super.fieldsRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row4<Integer, Long, String, String> valuesRow() {
    return (Row4) super.valuesRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Integer> field1() {
    return LoginUserInformation.LOGIN_USER_INFORMATION.ID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Long> field2() {
    return LoginUserInformation.LOGIN_USER_INFORMATION.USER_ID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<String> field3() {
    return LoginUserInformation.LOGIN_USER_INFORMATION.ACCOUNT;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<String> field4() {
    return LoginUserInformation.LOGIN_USER_INFORMATION.PASSWORD;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer component1() {
    return getId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long component2() {
    return getUserId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String component3() {
    return getAccount();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String component4() {
    return getPassword();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer value1() {
    return getId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long value2() {
    return getUserId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String value3() {
    return getAccount();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String value4() {
    return getPassword();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public LoginUserInformationRecord value1(Integer value) {
    setId(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public LoginUserInformationRecord value2(Long value) {
    setUserId(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public LoginUserInformationRecord value3(String value) {
    setAccount(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public LoginUserInformationRecord value4(String value) {
    setPassword(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public LoginUserInformationRecord values(Integer value1, Long value2, String value3,
      String value4) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached LoginUserInformationRecord
   */
  public LoginUserInformationRecord() {
    super(LoginUserInformation.LOGIN_USER_INFORMATION);
  }

  /**
   * Create a detached, initialised LoginUserInformationRecord
   */
  public LoginUserInformationRecord(Integer id, Long userId, String account, String password) {
    super(LoginUserInformation.LOGIN_USER_INFORMATION);

    set(0, id);
    set(1, userId);
    set(2, account);
    set(3, password);
  }
}

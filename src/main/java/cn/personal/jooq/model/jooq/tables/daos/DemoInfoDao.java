/*
 * This file is generated by jOOQ.
 */
package cn.personal.jooq.model.jooq.tables.daos;


import cn.personal.jooq.model.jooq.tables.DemoInfo;
import cn.personal.jooq.model.jooq.tables.records.DemoInfoRecord;
import java.util.List;
import javax.annotation.Generated;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DemoInfoDao extends
    DAOImpl<DemoInfoRecord, cn.personal.jooq.model.jooq.tables.pojos.DemoInfo, Long> {

  /**
   * Create a new DemoInfoDao without any configuration
   */
  public DemoInfoDao() {
    super(DemoInfo.DEMO_INFO, cn.personal.jooq.model.jooq.tables.pojos.DemoInfo.class);
  }

  /**
   * Create a new DemoInfoDao with an attached configuration
   */
  public DemoInfoDao(Configuration configuration) {
    super(DemoInfo.DEMO_INFO, cn.personal.jooq.model.jooq.tables.pojos.DemoInfo.class,
        configuration);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  protected Long getId(cn.personal.jooq.model.jooq.tables.pojos.DemoInfo object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<cn.personal.jooq.model.jooq.tables.pojos.DemoInfo> fetchById(Long... values) {
    return fetch(DemoInfo.DEMO_INFO.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public cn.personal.jooq.model.jooq.tables.pojos.DemoInfo fetchOneById(Long value) {
    return fetchOne(DemoInfo.DEMO_INFO.ID, value);
  }

  /**
   * Fetch records that have <code>password IN (values)</code>
   */
  public List<cn.personal.jooq.model.jooq.tables.pojos.DemoInfo> fetchByPassword(String... values) {
    return fetch(DemoInfo.DEMO_INFO.PASSWORD, values);
  }

  /**
   * Fetch records that have <code>username IN (values)</code>
   */
  public List<cn.personal.jooq.model.jooq.tables.pojos.DemoInfo> fetchByUsername(String... values) {
    return fetch(DemoInfo.DEMO_INFO.USERNAME, values);
  }
}

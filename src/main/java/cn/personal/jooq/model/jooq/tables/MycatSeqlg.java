/*
 * This file is generated by jOOQ.
 */
package cn.personal.jooq.model.jooq.tables;


import cn.personal.jooq.model.jooq.Indexes;
import cn.personal.jooq.model.jooq.Keys;
import cn.personal.jooq.model.jooq.Mydata;
import cn.personal.jooq.model.jooq.tables.records.MycatSeqlgRecord;
import java.util.Arrays;
import java.util.List;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MycatSeqlg extends TableImpl<MycatSeqlgRecord> {

  private static final long serialVersionUID = -1871312591;

  /**
   * The reference instance of <code>mydata.mycat_seqlg</code>
   */
  public static final MycatSeqlg MYCAT_SEQLG = new MycatSeqlg();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<MycatSeqlgRecord> getRecordType() {
    return MycatSeqlgRecord.class;
  }

  /**
   * The column <code>mydata.mycat_seqlg.name</code>.
   */
  public final TableField<MycatSeqlgRecord, String> NAME = createField("name",
      org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

  /**
   * The column <code>mydata.mycat_seqlg.current_value</code>.
   */
  public final TableField<MycatSeqlgRecord, Integer> CURRENT_VALUE = createField("current_value",
      org.jooq.impl.SQLDataType.INTEGER.nullable(false)
          .defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this,
      "");

  /**
   * The column <code>mydata.mycat_seqlg.increment</code>.
   */
  public final TableField<MycatSeqlgRecord, Integer> INCREMENT = createField("increment",
      org.jooq.impl.SQLDataType.INTEGER.nullable(false)
          .defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this,
      "");

  /**
   * Create a <code>mydata.mycat_seqlg</code> table reference
   */
  public MycatSeqlg() {
    this(DSL.name("mycat_seqlg"), null);
  }

  /**
   * Create an aliased <code>mydata.mycat_seqlg</code> table reference
   */
  public MycatSeqlg(String alias) {
    this(DSL.name(alias), MYCAT_SEQLG);
  }

  /**
   * Create an aliased <code>mydata.mycat_seqlg</code> table reference
   */
  public MycatSeqlg(Name alias) {
    this(alias, MYCAT_SEQLG);
  }

  private MycatSeqlg(Name alias, Table<MycatSeqlgRecord> aliased) {
    this(alias, aliased, null);
  }

  private MycatSeqlg(Name alias, Table<MycatSeqlgRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""));
  }

  public <O extends Record> MycatSeqlg(Table<O> child, ForeignKey<O, MycatSeqlgRecord> key) {
    super(child, key, MYCAT_SEQLG);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Schema getSchema() {
    return Mydata.MYDATA;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public List<Index> getIndexes() {
    return Arrays.<Index>asList(Indexes.MYCAT_SEQLG_PRIMARY);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public UniqueKey<MycatSeqlgRecord> getPrimaryKey() {
    return Keys.KEY_MYCAT_SEQLG_PRIMARY;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public List<UniqueKey<MycatSeqlgRecord>> getKeys() {
    return Arrays.<UniqueKey<MycatSeqlgRecord>>asList(Keys.KEY_MYCAT_SEQLG_PRIMARY);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public MycatSeqlg as(String alias) {
    return new MycatSeqlg(DSL.name(alias), this);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public MycatSeqlg as(Name alias) {
    return new MycatSeqlg(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public MycatSeqlg rename(String name) {
    return new MycatSeqlg(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public MycatSeqlg rename(Name name) {
    return new MycatSeqlg(name, null);
  }
}

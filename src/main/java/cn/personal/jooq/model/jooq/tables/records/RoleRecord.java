/*
 * This file is generated by jOOQ.
 */
package cn.personal.jooq.model.jooq.tables.records;


import cn.personal.jooq.model.jooq.tables.Role;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements
    Record2<Integer, String> {

  private static final long serialVersionUID = 1259546638;

  /**
   * Setter for <code>mydata.role.rid</code>.
   */
  public void setRid(Integer value) {
    set(0, value);
  }

  /**
   * Getter for <code>mydata.role.rid</code>.
   */
  public Integer getRid() {
    return (Integer) get(0);
  }

  /**
   * Setter for <code>mydata.role.rname</code>.
   */
  public void setRname(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>mydata.role.rname</code>.
   */
  public String getRname() {
    return (String) get(1);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Record1<Integer> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Row2<Integer, String> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row2<Integer, String> valuesRow() {
    return (Row2) super.valuesRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Integer> field1() {
    return Role.ROLE.RID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<String> field2() {
    return Role.ROLE.RNAME;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer component1() {
    return getRid();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String component2() {
    return getRname();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer value1() {
    return getRid();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String value2() {
    return getRname();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public RoleRecord value1(Integer value) {
    setRid(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public RoleRecord value2(String value) {
    setRname(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public RoleRecord values(Integer value1, String value2) {
    value1(value1);
    value2(value2);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached RoleRecord
   */
  public RoleRecord() {
    super(Role.ROLE);
  }

  /**
   * Create a detached, initialised RoleRecord
   */
  public RoleRecord(Integer rid, String rname) {
    super(Role.ROLE);

    set(0, rid);
    set(1, rname);
  }
}

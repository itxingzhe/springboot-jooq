/*
 * This file is generated by jOOQ.
 */
package cn.personal.jooq.model.jooq.tables;


import cn.personal.jooq.model.jooq.Mydata;
import cn.personal.jooq.model.jooq.tables.records.OperationLogRecord;
import java.time.LocalDateTime;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 操作日志表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class OperationLog extends TableImpl<OperationLogRecord> {

  private static final long serialVersionUID = 767887131;

  /**
   * The reference instance of <code>mydata.operation_log</code>
   */
  public static final OperationLog OPERATION_LOG = new OperationLog();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<OperationLogRecord> getRecordType() {
    return OperationLogRecord.class;
  }

  /**
   * The column <code>mydata.operation_log.id</code>.
   */
  public final TableField<OperationLogRecord, Long> ID = createField("id",
      org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

  /**
   * The column <code>mydata.operation_log.login_id</code>.
   */
  public final TableField<OperationLogRecord, Long> LOGIN_ID = createField("login_id",
      org.jooq.impl.SQLDataType.BIGINT, this, "");

  /**
   * The column <code>mydata.operation_log.login_name</code>.
   */
  public final TableField<OperationLogRecord, String> LOGIN_NAME = createField("login_name",
      org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>mydata.operation_log.ip_address</code>.
   */
  public final TableField<OperationLogRecord, String> IP_ADDRESS = createField("ip_address",
      org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>mydata.operation_log.method_name</code>.
   */
  public final TableField<OperationLogRecord, String> METHOD_NAME = createField("method_name",
      org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>mydata.operation_log.method_remark</code>.
   */
  public final TableField<OperationLogRecord, String> METHOD_REMARK = createField("method_remark",
      org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>mydata.operation_log.opt_date</code>.
   */
  public final TableField<OperationLogRecord, LocalDateTime> OPT_DATE = createField("opt_date",
      org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

  /**
   * The column <code>mydata.operation_log.operating_content</code>.
   */
  public final TableField<OperationLogRecord, String> OPERATING_CONTENT = createField(
      "operating_content", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * Create a <code>mydata.operation_log</code> table reference
   */
  public OperationLog() {
    this(DSL.name("operation_log"), null);
  }

  /**
   * Create an aliased <code>mydata.operation_log</code> table reference
   */
  public OperationLog(String alias) {
    this(DSL.name(alias), OPERATION_LOG);
  }

  /**
   * Create an aliased <code>mydata.operation_log</code> table reference
   */
  public OperationLog(Name alias) {
    this(alias, OPERATION_LOG);
  }

  private OperationLog(Name alias, Table<OperationLogRecord> aliased) {
    this(alias, aliased, null);
  }

  private OperationLog(Name alias, Table<OperationLogRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment("操作日志表"));
  }

  public <O extends Record> OperationLog(Table<O> child, ForeignKey<O, OperationLogRecord> key) {
    super(child, key, OPERATION_LOG);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Schema getSchema() {
    return Mydata.MYDATA;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public OperationLog as(String alias) {
    return new OperationLog(DSL.name(alias), this);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public OperationLog as(Name alias) {
    return new OperationLog(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public OperationLog rename(String name) {
    return new OperationLog(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public OperationLog rename(Name name) {
    return new OperationLog(name, null);
  }
}
